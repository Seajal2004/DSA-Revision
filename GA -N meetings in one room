//N meetings in one room

class Solution {
  public:
    int maxMeetings(vector<int>& start, vector<int>& end) {
        int n = start.size();
        
        // Store meetings as pairs of (end, start)
        vector<pair<int, int>> meetings;
        for (int i = 0; i < n; i++) {
            meetings.push_back({end[i], start[i]});
        }

        // Sort meetings by end time
        sort(meetings.begin(), meetings.end());

        int count = 0;
        int lastEnd = -1;

        for (auto& meeting : meetings) {
            if (meeting.second > lastEnd) {
                // Select this meeting
                count++;
                lastEnd = meeting.first;
            }
        }

        return count;
    }
};
